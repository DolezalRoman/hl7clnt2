package cz.i.amish.hl7clnt2.dbmsg;

import java.io.UnsupportedEncodingException;

/*
 * Created on 19.3.2004
 *
 * $Id: Recode.java,v 1.2 2017/04/24 13:44:08 raska Exp $
 * $Log: Recode.java,v $
 * Revision 1.2  2017/04/24 13:44:08  raska
 * vyhozeny komentare z duvodu problemu s cestinou
 *
 * Revision 1.1  2005/10/09 16:41:20  raska
 * Zavedeni do nove repository.
 *
 * Revision 1.1  2005/05/16 12:36:21  raska
 * Zalozeni projektu hl7clnt2 v repository.
 *
 */

/**
 * 
 * @author raska
 */

public class Recode {

	private static final int [][] ISO2ASCII = 
		{
			{0x80, 0x20},
			{0x81, 0x20},
			{0x82, 0x20},
			{0x83, 0x20},
			{0x84, 0x20},
			{0x85, 0x20},
			{0x86, 0x20},
			{0x87, 0x20},
			{0x88, 0x20},
			{0x89, 0x20},
//			{0x8A, 0x20},
			{0x8A, 0x53},
			{0x8B, 0x20},
			{0x8C, 0x20},
//			{0x8D, 0x20},
			{0x8D, 0x54},
//			{0x8E, 0x20},
			{0x8E, 0x5A},
			{0x8F, 0x20},
			{0x90, 0x20},
			{0x91, 0x20},
			{0x92, 0x20},
			{0x93, 0x20},
			{0x94, 0x20},
			{0x95, 0x20},
			{0x96, 0x20},
			{0x97, 0x20},
			{0x98, 0x20},
			{0x99, 0x20},
//			{0x9A, 0x20},
			{0x9A, 0x73},
			{0x9B, 0x20},
			{0x9C, 0x20},
//			{0x9D, 0x20},
			{0x9D, 0x74},
//			{0x9E, 0x20},
			{0x9E, 0x7A},
			{0x9F, 0x20},
			{0xA0, 0x20},
			{0xA1, 0x41},
			{0xA2, 0x20},
			{0xA3, 0x4C},
			{0xA4, 0x20},
			{0xA5, 0x4C},
			{0xA6, 0x53},
			{0xA7, 0x20},
			{0xA8, 0x20},
			{0xA9, 0x53},
			{0xAA, 0x53},
			{0xAB, 0x54},
			{0xAC, 0x5A},
			{0xAD, 0x20},
			{0xAE, 0x5A},
			{0xAF, 0x5A},
			{0xB0, 0x20},
			{0xB1, 0x61},
			{0xB2, 0x20},
			{0xB3, 0x6C},
			{0xB4, 0x20},
			{0xB5, 0x6C},
			{0xB6, 0x73},
			{0xB7, 0x20},
			{0xB8, 0x20},
			{0xB9, 0x73},
			{0xBA, 0x73},
			{0xBB, 0x74},
			{0xBC, 0x7A},
			{0xBD, 0x20},
			{0xBE, 0x7A},
			{0xBF, 0x7A},
			{0xC0, 0x52},
			{0xC1, 0x41},
			{0xC2, 0x41},
			{0xC3, 0x41},
			{0xC4, 0x41},
			{0xC5, 0x4C},
			{0xC6, 0x43},
			{0xC7, 0x43},
			{0xC8, 0x43},
			{0xC9, 0x45},
			{0xCA, 0x45},
			{0xCB, 0x45},
			{0xCC, 0x45},
			{0xCD, 0x49},
			{0xCE, 0x49},
			{0xCF, 0x44},
			{0xD0, 0x44},
			{0xD1, 0x4E},
			{0xD2, 0x4E},
			{0xD3, 0x4F},
			{0xD4, 0x4F},
			{0xD5, 0x4F},
			{0xD6, 0x4F},
			{0xD7, 0x20},
			{0xD8, 0x52},
			{0xD9, 0x55},
			{0xDA, 0x55},
			{0xDB, 0x55},
			{0xDC, 0x55},
			{0xDD, 0x59},
			{0xDE, 0x54},
			{0xDF, 0x20},
			{0xE0, 0x72},
			{0xE1, 0x61},
			{0xE2, 0x61},
			{0xE3, 0x61},
			{0xE4, 0x61},
			{0xE5, 0x6C},
			{0xE6, 0x63},
			{0xE7, 0x63},
			{0xE8, 0x63},
			{0xE9, 0x65},
			{0xEA, 0x65},
			{0xEB, 0x65},
			{0xEC, 0x65},
			{0xED, 0x69},
			{0xEE, 0x69},
			{0xEF, 0x64},
			{0xF0, 0x64},
			{0xF1, 0x6E},
			{0xF2, 0x6E},
			{0xF3, 0x6F},
			{0xF4, 0x6F},
			{0xF5, 0x6F},
			{0xF6, 0x6F},
			{0xF7, 0x20},
			{0xF8, 0x72},
			{0xF9, 0x75},
			{0xFA, 0x75},
			{0xFB, 0x75},
			{0xFC, 0x75},
			{0xFD, 0x79},
			{0xFE, 0x74},
			{0xFF, 0x20}
	};


	/**
	 * This method remove carons and acutes from string.
	 *
	 * @param str Input string.
	 * @return Output ASCII string.
	 */

	public static String toAscii(String str) throws UnsupportedEncodingException {
		byte [] bytes = str.getBytes("ISO-8859-2");
		StringBuffer result = new StringBuffer();		
		
		for (int i = 0; i < bytes.length; i++)
			if (bytes[i] >= 0) result.append((char) bytes[i]);
			else { 
				result.append((char) (ISO2ASCII[bytes[i] + 0x80][1]));
			}
		return result.toString();			
	}

	/**
	 * This method remove all non alfabetical characters string It's used in Lus.
	 *
	 * @param str Input string.
	 * @return Output ASCII string.
	 */
	public static String lusChar(String str) {
		String result = str.replaceAll("[\'`�]+", "");
		result = result.replaceAll("[^A-Za-z]+", " ");
		return result;			
	}

	/**
	 * Converts names to upper case without diacritical marks.
	 * Non alfabethic characeters are removed. Characters '-', ')', ',' and '.'
	 * are converted to spaces. Repeated spaces are removed and replaced with only one space.
	 *
	 * @param str All names joined in one string.
	 * @return Converted names.
	 */
//	public static String strippedNames (String str)
//	{
//		if ( null != str )
//		{
//			String reply = Recode.lusChar(Recode.toAscii(str.toUpperCase()));
//			reply = reply.replaceAll("[ ]+"," ");
//			reply = reply.trim();
//			return(reply);
//		} else {
//			return(null);
//		}
//	}
//	
	public static void main(String[] args) throws Exception {
	
		String s = "������������������������؊��";
		
		System.out.println(s);
		System.out.println(toAscii(s));

	}
}
